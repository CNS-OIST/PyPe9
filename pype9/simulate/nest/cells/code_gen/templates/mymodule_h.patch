--- nest/examples/MyModule/mymodule.h	2017-09-22 21:06:43.000000000 +1000
+++ nest-2.10/examples/MyModule/mymodule.h	2017-09-22 21:11:33.000000000 +1000
@@ -23,9 +23,9 @@
 #ifndef MYMODULE_H
 #define MYMODULE_H
 
-// Includes from sli:
-#include "slifunction.h"
 #include "slimodule.h"
+#include "slifunction.h"
+
 
 // Put your stuff into your own namespace.
 namespace mynest
@@ -52,7 +52,7 @@
   ~MyModule();
 
   /**
-   * Initialize module.
+   * Initialize module by registering models with the network.
    * @param SLIInterpreter* SLI interpreter
    */
   void init( SLIInterpreter* );
@@ -68,6 +68,28 @@
    * module, in particular, set up type tries for functions you have defined.
    */
   const std::string commandstring( void ) const;
+
+public:
+  // Classes implementing your functions -----------------------------
+
+  /**
+   * Implement a function for a step-pattern-based connection.
+   * @note What this function does is described in the SLI documentation
+   *       in the cpp file.
+   * @note The mangled name indicates this function expects the following
+   *       arguments on the stack (bottom first): vector of int, int,
+   *       vector of int, int.
+   * @note You must define a member object in your module class
+   *       of the function class. execute() is later invoked on this
+   *       member.
+   */
+  class StepPatternConnect_Vi_i_Vi_i_lFunction : public SLIFunction
+  {
+  public:
+    void execute( SLIInterpreter* ) const;
+  };
+
+  StepPatternConnect_Vi_i_Vi_i_lFunction stepPatternConnect_Vi_i_Vi_i_lFunction;
 };
 } // namespace mynest
 
