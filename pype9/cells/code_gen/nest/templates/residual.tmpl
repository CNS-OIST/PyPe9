{# This template sets up residual method required by the IDA solver

   Authors: Thomas G. Close and Ivan Raikov
   Copyright Okinawa Institute of Science and Technology Graudate University 2014
#}
{% if (ode_solver == "ida") %}

//-----------------------------------------------//
// This section was generated from residual.tmpl //
//-----------------------------------------------//
    {% for regime in componentclass.regimes %}
extern "C" int {{component_name}}_{{regime.name}}_residual (double t, N_Vector y, N_Vector yp, N_Vector f, void* pnode) {
    int status; 

    // cast the node ptr to an object of the proper type
    assert(pnode);
    {{component_name}} & vnode =  *(reinterpret_cast<{{component_name}}*>(pnode));

    N_Vector y1 = vnode.B_.y1;
             
    status = {{component_name}}_{{regime.name}}_dynamics (t, y, y1, pnode);

        {% for i in xrange(componentclass.num_states) %}
    ITEM(f, {{i}}) = ITEM(y1, {{i}}) - ITEM(yp, {{i}});
        {% endfor %}

    return status;
    {% endfor %}
}
//-------------- residual.tmpl ------------------//
{% endif %}