    static const gsl_odeiv2_step_type* T1 = gsl_odeiv2_step_rk2;
    B_.N = {{componentclass.num_state_variables}};

    if ( B_.s_ == 0 )
        B_.s_ = gsl_odeiv2_step_alloc (T1, B_.N);
    else
        gsl_odeiv2_step_reset(B_.s_);

    if ( B_.c_ == 0 )
        B_.c_ = gsl_odeiv2_control_standard_new ({{abs_tolerance}}, {{rel_tolerance}}, 1.0, 0.0);
    else
        gsl_odeiv2_control_init(B_.c_, {{abs_tolerance}}, {{rel_tolerance}}, 1.0, 0.0);

    if ( B_.e_ == 0 )
        B_.e_ = gsl_odeiv2_evolve_alloc(B_.N);
    else
        gsl_odeiv2_evolve_reset(B_.e_);

    B_.sys_.function  = {{component_name}}_dynamics;
    B_.sys_.jacobian  = {{component_name}}_jacobian;
    B_.sys_.dimension = B_.N;
    B_.sys_.params    = reinterpret_cast<void*>(this);

    B_.u = (double *)malloc(sizeof(double) * B_.N);
    assert (B_.u);
    B_.jac = (double *)malloc(sizeof(double) * B_.N);
    assert (B_.jac);