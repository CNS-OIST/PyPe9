{# This template provides a function to handle CVODE events

   Authors: Ivan Raikov and Thomas G. Close
   Copyright Okinawa Institute of Science and Technology Graudate University 2014
#}


//-------------------------------------------------------//
// This section was generated from NEST-cvode-event.tmpl //
//-------------------------------------------------------//

extern "C" int {{ModelName}}_event (double t, N_Vector y, double *g,
                                    void* pnode) {
    double v, vt; v = -1.0; vt = 0.0;

    // S is shorthand for the type that describes the model state
    typedef {{ModelName}}::State_ S;
           
    // cast the node ptr to an object of the proper type
    assert(pnode);
    const {{ModelName}} & node =  *(reinterpret_cast<{{ModelName}}*>(pnode));
      
    // params is a reference to the model parameters
    const struct {{ModelName}}::Parameters_ *params;
    params = &(node.P_);
      
    // state is a reference to the model state
    const struct {{ModelName}}::State_ *state;
    state = &(node.S_);

{% if v_threshold %}
    v = GET_ITEM (y, {{v_index}});
    g[0] = v - params->{{v_threshold}};
{% else %}
    g[0] = -1.0;
{% endif %}

    return 0;
}

// ------------------- NEST-cvode-event.tmpl ------------------------//