{# This template sets up residual method required by the IDA solver

   Authors: Ivan Raikov and Thomas G. Close
   Copyright Okinawa Institute of Science and Technology Graudate University 2014
#}

//----------------------------------------------------//
// This section was generated from NEST-residual.tmpl //
//----------------------------------------------------//

{% if (ODEmethod == "ida") %}

extern "C" int {{ModelName}}_residual (double t, N_Vector y, N_Vector yp, N_Vector f, void* pnode)
{
   int status; 

   // cast the node ptr to an object of the proper type
   assert(pnode);
   const {{ModelName}} & node =  *(reinterpret_cast<{{ModelName}}*>(pnode));
   {{ModelName}} & vnode =  *(reinterpret_cast<{{ModelName}}*>(pnode));

   N_Vector y1 = vnode.B_.y1;
             
   status = {{ModelName}}_dynamics (t, y, y1, pnode);

   {% for i in xrange(num_states) %}
   GET_ITEM(f, {{i}}) = GET_ITEM(y1, {{i}}) - GET_ITEM(yp, {{i}})
   {% endfor %}

   return status;
}

{% endif %}

//-------------- NEST-residual.tmpl ------------------//