#!/usr/bin/env python
"""
Main command for PyPe9 package, which can be used to invoke all PyPe9
functionality in a similar style to the 'git' or 'svn' commands, e.g.

    pype9 simulate <simulation.xml>

or

    pype9 import <some-mod-file.mod> <nineml-file.xml>
"""
import sys
import os.path
import subprocess as sp


def get_parser(cmd):
    return __import__('pype9.cmd.' + cmd).parser


cmds = [s[:-3] for s in os.listdir(cmd_dir)
           if s.endswith('.py') and s != 'pype9.py']

if len(sys.argv) < 2:
    print "Please provide a command. Available PyPe9 commands are:\n".format(
        "\n".join('  {}'.format(s) for s in cmds + ['help']))

command = sys.argv[1]

if command == 'help':
    if len(sys.argv) > 2:
        help_cmd = sys.argv[2]
        cmd_parser = get_parser(help_cmd)
        cmd_parser.print_help()
    else:
        print "\nAvailable PyPe9 commands:\n\n{}".format(
            "\n".join('  {}:{}'.format(s, get_parser(s).description)
                      for s in cmds))
        print ("  help:\nPrints this message or specific help information for "
               "a given command")
else:
    sp.check_call("{} {} {}".format(
        sys.executable, os.path.join(cmd_dir, command + '.py'),
        ' '.join(sys.argv[2:])), shell=True)
